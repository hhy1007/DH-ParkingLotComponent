<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eg.egsc.scp.parkinglotcomponent.mapper.ParkConsumeRecordMapper" >
  <resultMap id="BaseResultMap" type="com.eg.egsc.scp.parkinglotcomponent.mapper.entity.ParkConsumeRecord" >
    <id column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="car_num" property="carNum" jdbcType="VARCHAR" />
    <result column="card_number" property="cardNumber" jdbcType="VARCHAR" />
    <result column="owner_id" property="ownerId" jdbcType="VARCHAR" />
    <result column="consume_amount" property="consumeAmount" jdbcType="INTEGER" />
    <result column="fee_amount" property="feeAmount" jdbcType="INTEGER" />
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="fee_type" property="feeType" jdbcType="SMALLINT" />
    <result column="favorable_amount" property="favorableAmount" jdbcType="INTEGER" />
    <result column="favorable_type" property="favorableType" jdbcType="SMALLINT" />
    <result column="favorable_ticket_number" property="favorableTicketNumber" jdbcType="VARCHAR" />
    <result column="operator_id" property="operatorId" jdbcType="VARCHAR" />
    <result column="operator_name" property="operatorName" jdbcType="VARCHAR" />
    <result column="time_length" property="timeLength" jdbcType="VARCHAR" />
    <result column="access_id" property="accessId" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="court_uuid" property="courtUuid" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uuid, car_num, card_number, owner_id, consume_amount, fee_amount, serial_number, 
    fee_type, favorable_amount, favorable_type, favorable_ticket_number, operator_id, 
    operator_name, time_length, access_id, memo, court_uuid, create_time, update_time, 
    create_user, update_user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.eg.egsc.scp.parkinglotcomponent.mapper.entity.ParkConsumeRecordCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from plc.park_consume_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from plc.park_consume_record
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from plc.park_consume_record
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.eg.egsc.scp.parkinglotcomponent.mapper.entity.ParkConsumeRecordCriteria" >
    delete from plc.park_consume_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eg.egsc.scp.parkinglotcomponent.mapper.entity.ParkConsumeRecord" >
    insert into plc.park_consume_record (uuid, car_num, card_number, 
      owner_id, consume_amount, fee_amount, 
      serial_number, fee_type, favorable_amount, 
      favorable_type, favorable_ticket_number, 
      operator_id, operator_name, time_length, 
      access_id, memo, court_uuid, 
      create_time, update_time, create_user, 
      update_user)
    values (#{uuid,jdbcType=VARCHAR}, #{carNum,jdbcType=VARCHAR}, #{cardNumber,jdbcType=VARCHAR}, 
      #{ownerId,jdbcType=VARCHAR}, #{consumeAmount,jdbcType=INTEGER}, #{feeAmount,jdbcType=INTEGER}, 
      #{serialNumber,jdbcType=VARCHAR}, #{feeType,jdbcType=SMALLINT}, #{favorableAmount,jdbcType=INTEGER}, 
      #{favorableType,jdbcType=SMALLINT}, #{favorableTicketNumber,jdbcType=VARCHAR}, 
      #{operatorId,jdbcType=VARCHAR}, #{operatorName,jdbcType=VARCHAR}, #{timeLength,jdbcType=VARCHAR}, 
      #{accessId,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{courtUuid,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eg.egsc.scp.parkinglotcomponent.mapper.entity.ParkConsumeRecord" >
    insert into plc.park_consume_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="carNum != null" >
        car_num,
      </if>
      <if test="cardNumber != null" >
        card_number,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>
      <if test="consumeAmount != null" >
        consume_amount,
      </if>
      <if test="feeAmount != null" >
        fee_amount,
      </if>
      <if test="serialNumber != null" >
        serial_number,
      </if>
      <if test="feeType != null" >
        fee_type,
      </if>
      <if test="favorableAmount != null" >
        favorable_amount,
      </if>
      <if test="favorableType != null" >
        favorable_type,
      </if>
      <if test="favorableTicketNumber != null" >
        favorable_ticket_number,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="operatorName != null" >
        operator_name,
      </if>
      <if test="timeLength != null" >
        time_length,
      </if>
      <if test="accessId != null" >
        access_id,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="courtUuid != null" >
        court_uuid,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="carNum != null" >
        #{carNum,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null" >
        #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="consumeAmount != null" >
        #{consumeAmount,jdbcType=INTEGER},
      </if>
      <if test="feeAmount != null" >
        #{feeAmount,jdbcType=INTEGER},
      </if>
      <if test="serialNumber != null" >
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="feeType != null" >
        #{feeType,jdbcType=SMALLINT},
      </if>
      <if test="favorableAmount != null" >
        #{favorableAmount,jdbcType=INTEGER},
      </if>
      <if test="favorableType != null" >
        #{favorableType,jdbcType=SMALLINT},
      </if>
      <if test="favorableTicketNumber != null" >
        #{favorableTicketNumber,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null" >
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="timeLength != null" >
        #{timeLength,jdbcType=VARCHAR},
      </if>
      <if test="accessId != null" >
        #{accessId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="courtUuid != null" >
        #{courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eg.egsc.scp.parkinglotcomponent.mapper.entity.ParkConsumeRecordCriteria" resultType="java.lang.Integer" >
    select count(*) from plc.park_consume_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update plc.park_consume_record
    <set >
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.carNum != null" >
        car_num = #{record.carNum,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNumber != null" >
        card_number = #{record.cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null" >
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeAmount != null" >
        consume_amount = #{record.consumeAmount,jdbcType=INTEGER},
      </if>
      <if test="record.feeAmount != null" >
        fee_amount = #{record.feeAmount,jdbcType=INTEGER},
      </if>
      <if test="record.serialNumber != null" >
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.feeType != null" >
        fee_type = #{record.feeType,jdbcType=SMALLINT},
      </if>
      <if test="record.favorableAmount != null" >
        favorable_amount = #{record.favorableAmount,jdbcType=INTEGER},
      </if>
      <if test="record.favorableType != null" >
        favorable_type = #{record.favorableType,jdbcType=SMALLINT},
      </if>
      <if test="record.favorableTicketNumber != null" >
        favorable_ticket_number = #{record.favorableTicketNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorId != null" >
        operator_id = #{record.operatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorName != null" >
        operator_name = #{record.operatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.timeLength != null" >
        time_length = #{record.timeLength,jdbcType=VARCHAR},
      </if>
      <if test="record.accessId != null" >
        access_id = #{record.accessId,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.courtUuid != null" >
        court_uuid = #{record.courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update plc.park_consume_record
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      car_num = #{record.carNum,jdbcType=VARCHAR},
      card_number = #{record.cardNumber,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      consume_amount = #{record.consumeAmount,jdbcType=INTEGER},
      fee_amount = #{record.feeAmount,jdbcType=INTEGER},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      fee_type = #{record.feeType,jdbcType=SMALLINT},
      favorable_amount = #{record.favorableAmount,jdbcType=INTEGER},
      favorable_type = #{record.favorableType,jdbcType=SMALLINT},
      favorable_ticket_number = #{record.favorableTicketNumber,jdbcType=VARCHAR},
      operator_id = #{record.operatorId,jdbcType=VARCHAR},
      operator_name = #{record.operatorName,jdbcType=VARCHAR},
      time_length = #{record.timeLength,jdbcType=VARCHAR},
      access_id = #{record.accessId,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      court_uuid = #{record.courtUuid,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eg.egsc.scp.parkinglotcomponent.mapper.entity.ParkConsumeRecord" >
    update plc.park_consume_record
    <set >
      <if test="carNum != null" >
        car_num = #{carNum,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null" >
        card_number = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="consumeAmount != null" >
        consume_amount = #{consumeAmount,jdbcType=INTEGER},
      </if>
      <if test="feeAmount != null" >
        fee_amount = #{feeAmount,jdbcType=INTEGER},
      </if>
      <if test="serialNumber != null" >
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="feeType != null" >
        fee_type = #{feeType,jdbcType=SMALLINT},
      </if>
      <if test="favorableAmount != null" >
        favorable_amount = #{favorableAmount,jdbcType=INTEGER},
      </if>
      <if test="favorableType != null" >
        favorable_type = #{favorableType,jdbcType=SMALLINT},
      </if>
      <if test="favorableTicketNumber != null" >
        favorable_ticket_number = #{favorableTicketNumber,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null" >
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="timeLength != null" >
        time_length = #{timeLength,jdbcType=VARCHAR},
      </if>
      <if test="accessId != null" >
        access_id = #{accessId,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="courtUuid != null" >
        court_uuid = #{courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eg.egsc.scp.parkinglotcomponent.mapper.entity.ParkConsumeRecord" >
    update plc.park_consume_record
    set car_num = #{carNum,jdbcType=VARCHAR},
      card_number = #{cardNumber,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      consume_amount = #{consumeAmount,jdbcType=INTEGER},
      fee_amount = #{feeAmount,jdbcType=INTEGER},
      serial_number = #{serialNumber,jdbcType=VARCHAR},
      fee_type = #{feeType,jdbcType=SMALLINT},
      favorable_amount = #{favorableAmount,jdbcType=INTEGER},
      favorable_type = #{favorableType,jdbcType=SMALLINT},
      favorable_ticket_number = #{favorableTicketNumber,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      time_length = #{timeLength,jdbcType=VARCHAR},
      access_id = #{accessId,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      court_uuid = #{courtUuid,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.eg.egsc.scp.parkinglotcomponent.mapper.entity.ParkConsumeRecordCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from plc.park_consume_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>